{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Desktop\\\\whiteboard\\\\client\\\\src\\\\components\\\\DrawingCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DrawingCanvas({\n  socket,\n  roomId,\n  myColorRef\n}) {\n  _s();\n  const canvasRef = useRef();\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [color, setColor] = useState(\"#000000\");\n  const [width, setWidth] = useState(2);\n  const pathRef = useRef([]);\n  useEffect(() => {\n    const c = canvasRef.current;\n    const ctx = c.getContext(\"2d\");\n    const onLoadCommands = commands => {\n      commands.forEach(cmd => {\n        if (cmd.type === \"stroke\") {\n          drawStroke(ctx, cmd.data, false);\n        } else if (cmd.type === \"clear\") {\n          ctx.clearRect(0, 0, c.width, c.height);\n        }\n      });\n    };\n    if (socket) {\n      socket.on(\"load-commands\", onLoadCommands);\n      socket.on(\"draw-start\", ({\n        payload\n      }) => {\n        beginRemoteStroke(ctx, payload);\n      });\n      socket.on(\"draw-move\", ({\n        payload\n      }) => {\n        moveRemoteStroke(ctx, payload);\n      });\n      socket.on(\"draw-end\", ({\n        command\n      }) => {\n        endRemoteStroke(ctx, command);\n      });\n      socket.on(\"clear-canvas\", () => {\n        ctx.clearRect(0, 0, c.width, c.height);\n      });\n    }\n    return () => {\n      if (socket) {\n        socket.off(\"load-commands\", onLoadCommands);\n      }\n    };\n  }, [socket]);\n  function drawStroke(ctx, data, smooth = true) {\n    ctx.lineJoin = \"round\";\n    ctx.lineCap = \"round\";\n    ctx.strokeStyle = data.color;\n    ctx.lineWidth = data.width;\n    ctx.beginPath();\n    const path = data.path || [];\n    if (path.length === 0) return;\n    ctx.moveTo(path[0].x, path[0].y);\n    for (let i = 1; i < path.length; i++) {\n      ctx.lineTo(path[i].x, path[i].y);\n    }\n    ctx.stroke();\n  }\n  function beginRemoteStroke(ctx, payload) {\n    drawStroke(ctx, {\n      color: payload.color,\n      width: payload.width,\n      path: [payload.point]\n    }, false);\n  }\n  function moveRemoteStroke(ctx, payload) {\n    drawStroke(ctx, {\n      color: payload.color,\n      width: payload.width,\n      path: payload.path\n    }, false);\n  }\n  function endRemoteStroke(ctx, command) {\n    drawStroke(ctx, command.data, false);\n  }\n  function getPos(e) {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const clientX = e.touches ? e.touches[0].clientX : e.clientX;\n    const clientY = e.touches ? e.touches[0].clientY : e.clientY;\n    return {\n      x: clientX - rect.left,\n      y: clientY - rect.top\n    };\n  }\n  function start(e) {\n    if (!socket) return;\n    const p = getPos(e);\n    setIsDrawing(true);\n    pathRef.current = [p];\n    socket.emit(\"draw-start\", {\n      roomId,\n      payload: {\n        point: p,\n        color,\n        width\n      }\n    });\n  }\n  function draw(e) {\n    if (!isDrawing || !socket) return;\n    const p = getPos(e);\n    pathRef.current.push(p);\n    socket.emit(\"draw-move\", {\n      roomId,\n      payload: {\n        path: [p],\n        color,\n        width\n      }\n    });\n    const ctx = canvasRef.current.getContext(\"2d\");\n    drawStroke(ctx, {\n      color,\n      width,\n      path: pathRef.current\n    });\n    socket.emit(\"cursor-move\", {\n      roomId,\n      x: p.x,\n      y: p.y\n    });\n  }\n  function end(e) {\n    if (!isDrawing || !socket) return;\n    setIsDrawing(false);\n    const command = {\n      type: \"stroke\",\n      data: {\n        path: pathRef.current,\n        color,\n        width\n      },\n      timestamp: new Date()\n    };\n    socket.emit(\"draw-end\", {\n      roomId,\n      command\n    });\n    pathRef.current = [];\n  }\n  function clearCanvas() {\n    const ctx = canvasRef.current.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    if (socket) socket.emit(\"clear-canvas\", {\n      roomId\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    onMouseLeave: () => {\n      if (socket) socket.emit(\"cursor-move\", {\n        roomId,\n        x: -1,\n        y: -1\n      });\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      onMouseDown: start,\n      onMouseMove: draw,\n      onMouseUp: end,\n      onTouchStart: start,\n      onTouchMove: draw,\n      onTouchEnd: end\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: 8,\n        top: 8,\n        background: \"rgba(255,255,255,0.9)\",\n        padding: 8,\n        borderRadius: 6\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Color:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: color,\n          onChange: e => setColor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Width:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"slider\",\n          type: \"range\",\n          min: \"1\",\n          max: \"12\",\n          value: width,\n          onChange: e => setWidth(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: clearCanvas,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(DrawingCanvas, \"6+2q3zcheasPLgXVhVSp5p9lzvY=\");\n_c = DrawingCanvas;\nvar _c;\n$RefreshReg$(_c, \"DrawingCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","DrawingCanvas","socket","roomId","myColorRef","_s","canvasRef","isDrawing","setIsDrawing","color","setColor","width","setWidth","pathRef","c","current","ctx","getContext","onLoadCommands","commands","forEach","cmd","type","drawStroke","data","clearRect","height","on","payload","beginRemoteStroke","moveRemoteStroke","command","endRemoteStroke","off","smooth","lineJoin","lineCap","strokeStyle","lineWidth","beginPath","path","length","moveTo","x","y","i","lineTo","stroke","point","getPos","e","rect","getBoundingClientRect","clientX","touches","clientY","left","top","start","p","emit","draw","push","end","timestamp","Date","clearCanvas","style","onMouseLeave","children","ref","onMouseDown","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","fileName","_jsxFileName","lineNumber","columnNumber","position","background","padding","borderRadius","value","onChange","target","className","min","max","parseInt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Desktop/whiteboard/client/src/components/DrawingCanvas.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nexport default function DrawingCanvas({ socket, roomId, myColorRef }) {\n  const canvasRef = useRef();\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [color, setColor] = useState(\"#000000\");\n  const [width, setWidth] = useState(2);\n  const pathRef = useRef([]);\n\n  useEffect(() => {\n    const c = canvasRef.current;\n    const ctx = c.getContext(\"2d\");\n    const onLoadCommands = (commands) => {\n      commands.forEach((cmd) => {\n        if (cmd.type === \"stroke\") {\n          drawStroke(ctx, cmd.data, false);\n        } else if (cmd.type === \"clear\") {\n          ctx.clearRect(0, 0, c.width, c.height);\n        }\n      });\n    };\n    if (socket) {\n      socket.on(\"load-commands\", onLoadCommands);\n      socket.on(\"draw-start\", ({ payload }) => {\n        beginRemoteStroke(ctx, payload);\n      });\n      socket.on(\"draw-move\", ({ payload }) => {\n        moveRemoteStroke(ctx, payload);\n      });\n      socket.on(\"draw-end\", ({ command }) => {\n        endRemoteStroke(ctx, command);\n      });\n      socket.on(\"clear-canvas\", () => {\n        ctx.clearRect(0, 0, c.width, c.height);\n      });\n    }\n    return () => {\n      if (socket) {\n        socket.off(\"load-commands\", onLoadCommands);\n      }\n    };\n  }, [socket]);\n\n  function drawStroke(ctx, data, smooth = true) {\n    ctx.lineJoin = \"round\";\n    ctx.lineCap = \"round\";\n    ctx.strokeStyle = data.color;\n    ctx.lineWidth = data.width;\n    ctx.beginPath();\n    const path = data.path || [];\n    if (path.length === 0) return;\n    ctx.moveTo(path[0].x, path[0].y);\n    for (let i = 1; i < path.length; i++) {\n      ctx.lineTo(path[i].x, path[i].y);\n    }\n    ctx.stroke();\n  }\n\n  function beginRemoteStroke(ctx, payload) {\n    drawStroke(\n      ctx,\n      { color: payload.color, width: payload.width, path: [payload.point] },\n      false\n    );\n  }\n  function moveRemoteStroke(ctx, payload) {\n    drawStroke(\n      ctx,\n      { color: payload.color, width: payload.width, path: payload.path },\n      false\n    );\n  }\n  function endRemoteStroke(ctx, command) {\n    drawStroke(ctx, command.data, false);\n  }\n\n  function getPos(e) {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const clientX = e.touches ? e.touches[0].clientX : e.clientX;\n    const clientY = e.touches ? e.touches[0].clientY : e.clientY;\n    return { x: clientX - rect.left, y: clientY - rect.top };\n  }\n\n  function start(e) {\n    if (!socket) return;\n    const p = getPos(e);\n    setIsDrawing(true);\n    pathRef.current = [p];\n    socket.emit(\"draw-start\", { roomId, payload: { point: p, color, width } });\n  }\n  function draw(e) {\n    if (!isDrawing || !socket) return;\n    const p = getPos(e);\n    pathRef.current.push(p);\n    socket.emit(\"draw-move\", { roomId, payload: { path: [p], color, width } });\n    const ctx = canvasRef.current.getContext(\"2d\");\n    drawStroke(ctx, { color, width, path: pathRef.current });\n    socket.emit(\"cursor-move\", { roomId, x: p.x, y: p.y });\n  }\n  function end(e) {\n    if (!isDrawing || !socket) return;\n    setIsDrawing(false);\n    const command = {\n      type: \"stroke\",\n      data: { path: pathRef.current, color, width },\n      timestamp: new Date(),\n    };\n    socket.emit(\"draw-end\", { roomId, command });\n    pathRef.current = [];\n  }\n\n  function clearCanvas() {\n    const ctx = canvasRef.current.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    if (socket) socket.emit(\"clear-canvas\", { roomId });\n  }\n\n  return (\n    <div\n      style={{ width: \"100%\", height: \"100%\" }}\n      onMouseLeave={() => {\n        if (socket) socket.emit(\"cursor-move\", { roomId, x: -1, y: -1 });\n      }}\n    >\n      <canvas\n        ref={canvasRef}\n        style={{ width: \"100%\", height: \"100%\" }}\n        onMouseDown={start}\n        onMouseMove={draw}\n        onMouseUp={end}\n        onTouchStart={start}\n        onTouchMove={draw}\n        onTouchEnd={end}\n      />\n      <div\n        style={{\n          position: \"absolute\",\n          left: 8,\n          top: 8,\n          background: \"rgba(255,255,255,0.9)\",\n          padding: 8,\n          borderRadius: 6,\n        }}\n      >\n        <div>\n          Color:{\" \"}\n          <input\n            type=\"color\"\n            value={color}\n            onChange={(e) => setColor(e.target.value)}\n          />\n        </div>\n        <div>\n          Width:{\" \"}\n          <input\n            className=\"slider\"\n            type=\"range\"\n            min=\"1\"\n            max=\"12\"\n            value={width}\n            onChange={(e) => setWidth(parseInt(e.target.value))}\n          />\n        </div>\n        <button className=\"btn\" onClick={clearCanvas}>\n          Clear\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}